openapi: 3.0.0
info:
  title: League Service
  version: 1.0.0
servers:
  - url: http://localhost:8105
tags:
  - name: league
paths:
  /leagues/{id}:
    get:
      tags:
        - league
      summary: Get league by ID
      operationId: getLeagueById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueDTO'
    put:
      tags:
        - league
      summary: Update league by ID
      operationId: updateLeagueById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeagueDTO'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueDTO'
    delete:
      tags:
        - league
      summary: Delete league by ID
      operationId: deleteLeagueById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: Successful response
  /leagues:
    post:
      tags:
        - league
      summary: Create a new league
      operationId: createLeague
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeagueDTO'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueDTO'
components:
  schemas:
    LeagueDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        basicSettingDTO:
          $ref: '#/components/schemas/BasicSettingsDTO'
        draftSettingsDTO:
          $ref: '#/components/schemas/DraftSettingsDTO'
        rosterSettingsDTO:
          $ref: '#/components/schemas/RosterSettingsDTO'
    BasicSettingsDTO:
      type: object
      required:
        - leagueName
        - numberOfTeams
        - scoringType
      properties:
        id:
          type: integer
          format: int64
        leagueId:
          type: integer
          format: int64
        leagueName:
          type: string
        numberOfTeams:
          type: string
        scoringType:
          $ref: '#/components/schemas/ScoringType'
    DraftSettingsDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        leagueId:
          type: integer
          format: int64
        draftType:
          $ref: '#/components/schemas/DraftType'
        draftDate:
          type: string
        draftTime:
          type: string
        secondsPerPick:
          type: integer
          default: 90
        draftPickTrading:
          type: boolean
        draftReady:
          type: boolean
          description: When teams are all registered, and draft date is set, then set to true
#        draftOrder:
#          type: array
#          items:
#            $ref: '#/components/schemas/TeamDTO'
    RosterSettingsDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        leagueId:
          type: integer
          format: int64
        rosterSize:
          type: integer
          description: value of position.starter + position.bench
        numberOfStarters:
          type: integer
          description: value of position.starter
        numberOfBench:
          type: integer
          description: value of position.bench + ir
    #Enum
    ScoringType:
      type: string
      enum: [ STANDARD , PPR ]
    DraftType:
      type: string
      enum: [ AUTO , SNAKE, AUCTION , OFFLINE]
#    TeamDTO:
#      type: object
#      properties:
#        id:
#          type: integer
#          format: int64
#        uuid:
#          type: string
#          format: uuid



